<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd  
                        http://www.springframework.org/schema/aop  
                        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
                        http://www.springframework.org/schema/tx  
                        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 获取JDBC连接属性 -->
	<context:property-placeholder location="classpath:config.properties" />
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}"/>
	</bean>

	<!-- sqlSessionFactory -->
	<!-- MyBatis在spring中Bean的配置，都是固定的 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<!-- 事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />  
    </bean>
    
    <!-- 启用注解配置，并指定扫描位置 -->
    <context:component-scan base-package="com.best.demo.staff.dao,
 	    com.best.demo.staff.service,
 	    com.best.demo.staff.aid,
 	    com.best.demo.staff.task">
	    <!-- 指明包括Aspect注解扫描 -->
	    <context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect"/> 
    </context:component-scan>
    <!-- 启用自动注入 -->
    <context:annotation-config/>
    <!-- 启用注解声明事务 -->
    <tx:annotation-driven/>
            
	<!-- AOP -->
	<!-- 启用AOP注解 -->
	<aop:aspectj-autoproxy/>
	
<!-- 	<aop:config> -->
<!-- 		<aop:aspect id="performanceLogger" ref="performanceMonitor"> -->
<!-- 			<aop:pointcut expression="execution(* com.best.demo.staff.service.*.*(..))" id="business"/> -->
<!-- 			<aop:around method="logExcuteTime" pointcut-ref="business"/> -->
<!-- 		</aop:aspect> -->
<!-- 	</aop:config> -->
	
<!-- 	<bean id="performanceMonitor" class="com.best.demo.staff.aid.PerformanceMonitor"></bean> -->
	<!-- 配置映射器 -->
<!-- 	<bean id="staffDao" class="org.mybatis.spring.mapper.MapperFactoryBean"> -->
<!-- 		<property name="mapperInterface" value="com.best.demo.staff.dao.StaffDao" /> -->
<!-- 		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
<!-- 	</bean> -->
	
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
    	<!-- 指定识别注解 -->
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>  
        <property name="basePackage" value="com.best.demo.staff.dao"/>  
    </bean>  

	<bean name="staffStatisticsQuartz"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="staffStatisticsTask" />
		<property name="targetMethod">
			<value>execute</value>
		</property>
		<property name="concurrent">
			<value>false</value>
		</property>
	</bean>
	<bean id="quartzTrigger" lazy-init="false" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<!-- 触发bean配置 -->
		<property name="jobDetail" ref="staffStatisticsQuartz" />
		<!-- 触发时间配置 -->
		<property name="cronExpression">
			<value>0/10 * * * * ?</value>
		</property>
	</bean> 
	<bean id="schedualerFactory"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!-- 添加触发器 -->
		<property name="triggers">
			<list>
				<ref bean="quartzTrigger" />
			</list>
		</property>
	</bean> 
</beans>  